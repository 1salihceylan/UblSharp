// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Manual changes to this file will be overwritten if the code is regenerated.
//
// </auto-generated>
//------------------------------------------------------------------------------
namespace UblSharp
{
    using UnqualifiedDataTypes;
    using CommonAggregateComponents;
    using CommonExtensionComponents;
    
    
    /// <summary>
    /// A document issued to a forwarder, giving instructions regarding the action to be taken for the forwarding of goods described therein. Forwarding Instructions is used by any party who gives instructions for the transportation services required for a consignment of goods to any party who is contracted to provide the transportation services. The parties who issue this document are commonly referred to as the shipper or consignor, while the parties who receive this document are forwarders, carriers, shipping agents, etc. This document may also be issued by a forwarder or shipping agent in its capacity as a shipper. This document can be used to arrange for the transportation (1) of different types of goods or cargoes; (2) whether containerized or non-containerized; (3) through different modes of transport including multi-modal; and (4) from any origin to any destination.
    /// <para />ComponentType: ABIE
    /// <para />DictionaryEntryName: Forwarding Instructions. Details
    /// <para />ObjectClass: Forwarding Instructions
    /// <para />AlternativeBusinessTerms: Forwarding Instruction, Freight Forwarding Instruction, Shippers Letter of Instruction, Shipper&apos;s Letter of Instruction, Shipping Instruction
    /// </summary>
#if FEATURE_SERIALIZATION
    [System.SerializableAttribute()]
#endif
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ForwardingInstructions", Namespace = "urn:oasis:names:specification:ubl:schema:xsd:ForwardingInstructions-2")]
    [System.Xml.Serialization.XmlRootAttribute("ForwardingInstructions", Namespace = "urn:oasis:names:specification:ubl:schema:xsd:ForwardingInstructions-2", IsNullable=false)]
    public partial class ForwardingInstructionsType : BaseDocument
    {
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("CarrierAssignedID", Namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2")]
        public IdentifierType @__CarrierAssignedID;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("IssueDate", Namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2")]
        public DateType @__IssueDate;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("IssueTime", Namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2")]
        public TimeType @__IssueTime;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("Name", Namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2")]
        public NameType @__Name;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("Description", Namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2")]
        public System.Collections.Generic.List<TextType> @__Description;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("Note", Namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2")]
        public System.Collections.Generic.List<TextType> @__Note;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("DocumentStatusCode", Namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2")]
        public CodeType @__DocumentStatusCode;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("ShippingOrderID", Namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2")]
        public IdentifierType @__ShippingOrderID;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("ToOrderIndicator", Namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2")]
        public IndicatorType @__ToOrderIndicator;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("AdValoremIndicator", Namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2")]
        public IndicatorType @__AdValoremIndicator;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("DeclaredCarriageValueAmount", Namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2")]
        public AmountType @__DeclaredCarriageValueAmount;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("OtherInstruction", Namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2")]
        public System.Collections.Generic.List<TextType> @__OtherInstruction;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("ConsignorParty", Namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2")]
        public PartyType @__ConsignorParty;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("CarrierParty", Namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2")]
        public PartyType @__CarrierParty;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("FreightForwarderParty", Namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2")]
        public PartyType @__FreightForwarderParty;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("Shipment", Namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2")]
        public ShipmentType @__Shipment;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("DocumentReference", Namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2")]
        public System.Collections.Generic.List<DocumentReferenceType> @__DocumentReference;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("ExchangeRate", Namespace = "urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2")]
        public System.Collections.Generic.List<ExchangeRateType> @__ExchangeRate;
        
        /// <summary>
        /// Reference number assigned by a carrier or its agent to identify a specific shipment, such as a booking reference number when cargo space is reserved prior to loading.
        /// <para />ComponentType: BBIE
        /// <para />DictionaryEntryName: Forwarding Instructions. Carrier Assigned_ Identifier. Identifier
        /// <para />Cardinality: 0..1
        /// <para />ObjectClass: Forwarding Instructions
        /// <para />PropertyTermQualifier: Carrier Assigned
        /// <para />PropertyTerm: Identifier
        /// <para />RepresentationTerm: Identifier
        /// <para />DataType: Identifier. Type
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public IdentifierType CarrierAssignedID
        {
            get
            {
                if (__CarrierAssignedID == null) { __CarrierAssignedID = new IdentifierType(); }
                return __CarrierAssignedID;
            }
            set
            {
                __CarrierAssignedID = value;
            }
        }

        /// <summary>
        /// The date, assigned by the sender, on which this document was issued.
        /// <para />ComponentType: BBIE
        /// <para />DictionaryEntryName: Forwarding Instructions. Issue Date. Date
        /// <para />Cardinality: 0..1
        /// <para />ObjectClass: Forwarding Instructions
        /// <para />PropertyTerm: Issue Date
        /// <para />RepresentationTerm: Date
        /// <para />DataType: Date. Type
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public DateType IssueDate
        {
            get
            {
                if (__IssueDate == null) { __IssueDate = new DateType(); }
                return __IssueDate;
            }
            set
            {
                __IssueDate = value;
            }
        }

        /// <summary>
        /// The time, assigned by the sender, at which this document was issued.
        /// <para />ComponentType: BBIE
        /// <para />DictionaryEntryName: Forwarding Instructions. Issue Time. Time
        /// <para />Cardinality: 0..1
        /// <para />ObjectClass: Forwarding Instructions
        /// <para />PropertyTerm: Issue Time
        /// <para />RepresentationTerm: Time
        /// <para />DataType: Time. Type
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public TimeType IssueTime
        {
            get
            {
                if (__IssueTime == null) { __IssueTime = new TimeType(); }
                return __IssueTime;
            }
            set
            {
                __IssueTime = value;
            }
        }

        /// <summary>
        /// Text, assigned by the sender, that identifies this document to business users.
        /// <para />ComponentType: BBIE
        /// <para />DictionaryEntryName: Forwarding Instructions. Name
        /// <para />Cardinality: 0..1
        /// <para />ObjectClass: Forwarding Instructions
        /// <para />PropertyTerm: Name
        /// <para />RepresentationTerm: Name
        /// <para />DataType: Name. Type
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public NameType Name
        {
            get
            {
                if (__Name == null) { __Name = new NameType(); }
                return __Name;
            }
            set
            {
                __Name = value;
            }
        }

        /// <summary>
        /// Textual description of the document instance.
        /// <para />ComponentType: BBIE
        /// <para />DictionaryEntryName: Forwarding Instructions. Description. Text
        /// <para />Cardinality: 0..n
        /// <para />ObjectClass: Forwarding Instructions
        /// <para />PropertyTerm: Description
        /// <para />RepresentationTerm: Text
        /// <para />DataType: Text. Type
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public System.Collections.Generic.List<TextType> Description
        {
            get
            {
                if (__Description == null) { __Description = new System.Collections.Generic.List<TextType>(); }
                return __Description;
            }
            set
            {
                __Description = value;
            }
        }

        /// <summary>
        /// Free-form text pertinent to this document, conveying information that is not contained explicitly in other structures.
        /// <para />ComponentType: BBIE
        /// <para />DictionaryEntryName: Forwarding Instructions. Note. Text
        /// <para />Cardinality: 0..n
        /// <para />ObjectClass: Forwarding Instructions
        /// <para />PropertyTerm: Note
        /// <para />RepresentationTerm: Text
        /// <para />DataType: Text. Type
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public System.Collections.Generic.List<TextType> Note
        {
            get
            {
                if (__Note == null) { __Note = new System.Collections.Generic.List<TextType>(); }
                return __Note;
            }
            set
            {
                __Note = value;
            }
        }

        /// <summary>
        /// A code signifying the status of the Forwarding Instructions with respect to its original state. This code may be used if the document precedes the event and is subsequently found to be incorrect and in need of cancellation or revision.
        /// <para />ComponentType: BBIE
        /// <para />DictionaryEntryName: Forwarding Instructions. Document Status Code. Code
        /// <para />Cardinality: 0..1
        /// <para />ObjectClass: Forwarding Instructions
        /// <para />PropertyTerm: Document Status Code
        /// <para />RepresentationTerm: Code
        /// <para />DataTypeQualifier: Document Status
        /// <para />DataType: Document Status_ Code. Type
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public CodeType DocumentStatusCode
        {
            get
            {
                if (__DocumentStatusCode == null) { __DocumentStatusCode = new CodeType(); }
                return __DocumentStatusCode;
            }
            set
            {
                __DocumentStatusCode = value;
            }
        }

        /// <summary>
        /// Reference number to identify a Shipping Order.
        /// <para />ComponentType: BBIE
        /// <para />DictionaryEntryName: Forwarding Instructions. Shipping Order Identifier. Identifier
        /// <para />Cardinality: 0..1
        /// <para />ObjectClass: Forwarding Instructions
        /// <para />PropertyTerm: Shipping Order Identifier
        /// <para />RepresentationTerm: Identifier
        /// <para />DataType: Identifier. Type
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public IdentifierType ShippingOrderID
        {
            get
            {
                if (__ShippingOrderID == null) { __ShippingOrderID = new IdentifierType(); }
                return __ShippingOrderID;
            }
            set
            {
                __ShippingOrderID = value;
            }
        }

        /// <summary>
        /// Indicates whether the transport document is consigned to order.
        /// <para />ComponentType: BBIE
        /// <para />DictionaryEntryName: Forwarding Instructions. To Order_ Indicator. Indicator
        /// <para />Cardinality: 0..1
        /// <para />ObjectClass: Forwarding Instructions
        /// <para />PropertyTermQualifier: To Order
        /// <para />PropertyTerm: Indicator
        /// <para />RepresentationTerm: Indicator
        /// <para />DataType: Indicator. Type
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public IndicatorType ToOrderIndicator
        {
            get
            {
                if (__ToOrderIndicator == null) { __ToOrderIndicator = new IndicatorType(); }
                return __ToOrderIndicator;
            }
            set
            {
                __ToOrderIndicator = value;
            }
        }

        /// <summary>
        /// A term used in commerce in reference to certain duties, called ad valorem duties, which are levied on commodities at certain rates per centum on their value.
        /// <para />ComponentType: BBIE
        /// <para />DictionaryEntryName: Forwarding Instructions. Ad Valorem_ Indicator. Indicator
        /// <para />Cardinality: 0..1
        /// <para />ObjectClass: Forwarding Instructions
        /// <para />PropertyTermQualifier: Ad Valorem
        /// <para />PropertyTerm: Indicator
        /// <para />RepresentationTerm: Indicator
        /// <para />DataType: Indicator. Type
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public IndicatorType AdValoremIndicator
        {
            get
            {
                if (__AdValoremIndicator == null) { __AdValoremIndicator = new IndicatorType(); }
                return __AdValoremIndicator;
            }
            set
            {
                __AdValoremIndicator = value;
            }
        }

        /// <summary>
        /// Value declared by the shipper or his agent solely for the purpose of varying the carrier&apos;s level of liability from that provided in the contract of carriage in case of loss or damage to goods or delayed delivery.
        /// <para />ComponentType: BBIE
        /// <para />DictionaryEntryName: Forwarding Instructions. Declared Carriage_ Value. Amount
        /// <para />Cardinality: 0..1
        /// <para />ObjectClass: Forwarding Instructions
        /// <para />PropertyTermQualifier: Declared Carriage
        /// <para />PropertyTerm: Value
        /// <para />RepresentationTerm: Amount
        /// <para />DataType: Amount. Type
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public AmountType DeclaredCarriageValueAmount
        {
            get
            {
                if (__DeclaredCarriageValueAmount == null) { __DeclaredCarriageValueAmount = new AmountType(); }
                return __DeclaredCarriageValueAmount;
            }
            set
            {
                __DeclaredCarriageValueAmount = value;
            }
        }

        /// <summary>
        /// Contains other free-text instructions to the forwarders or carriers related to the shipment. This should only be used where such information cannot be represented in other structured information entities within the document.
        /// <para />ComponentType: BBIE
        /// <para />DictionaryEntryName: Forwarding Instructions. Other_ Instruction. Text
        /// <para />Cardinality: 0..n
        /// <para />ObjectClass: Forwarding Instructions
        /// <para />PropertyTermQualifier: Other
        /// <para />PropertyTerm: Instruction
        /// <para />RepresentationTerm: Text
        /// <para />DataType: Text. Type
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public System.Collections.Generic.List<TextType> OtherInstruction
        {
            get
            {
                if (__OtherInstruction == null) { __OtherInstruction = new System.Collections.Generic.List<TextType>(); }
                return __OtherInstruction;
            }
            set
            {
                __OtherInstruction = value;
            }
        }

        /// <summary>
        /// The party consigning goods, as stipulated in the transport contract by the party ordering transport.
        /// <para />ComponentType: ASBIE
        /// <para />DictionaryEntryName: Forwarding Instructions. Consignor_ Party. Party
        /// <para />Cardinality: 0..1
        /// <para />ObjectClass: Forwarding Instructions
        /// <para />PropertyTermQualifier: Consignor
        /// <para />PropertyTerm: Party
        /// <para />AssociatedObjectClass: Party
        /// <para />RepresentationTerm: Party
        /// <para />AlternativeBusinessTerms: Consignor (WCO ID 71 and 72)
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public PartyType ConsignorParty
        {
            get
            {
                if (__ConsignorParty == null) { __ConsignorParty = new PartyType(); }
                return __ConsignorParty;
            }
            set
            {
                __ConsignorParty = value;
            }
        }

        /// <summary>
        /// The party providing the transport of goods between named points.
        /// <para />ComponentType: ASBIE
        /// <para />DictionaryEntryName: Forwarding Instructions. Carrier_ Party. Party
        /// <para />Cardinality: 0..1
        /// <para />ObjectClass: Forwarding Instructions
        /// <para />PropertyTermQualifier: Carrier
        /// <para />PropertyTerm: Party
        /// <para />AssociatedObjectClass: Party
        /// <para />RepresentationTerm: Party
        /// <para />AlternativeBusinessTerms: Transport Company, Shipping Line, NVOCC, Airline, Haulier, Courier, Carrier (WCO ID 49 and 50)
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public PartyType CarrierParty
        {
            get
            {
                if (__CarrierParty == null) { __CarrierParty = new PartyType(); }
                return __CarrierParty;
            }
            set
            {
                __CarrierParty = value;
            }
        }

        /// <summary>
        /// A party combining individual smaller consignments into a single larger shipment (a so-called consolidated consignment or shipment) that is sent to a counterpart who mirrors the consolidator&apos;s activity by dividing the consolidated consignment into its original components.
        /// <para />ComponentType: ASBIE
        /// <para />DictionaryEntryName: Forwarding Instructions. Freight Forwarder_ Party. Party
        /// <para />Cardinality: 0..1
        /// <para />ObjectClass: Forwarding Instructions
        /// <para />PropertyTermQualifier: Freight Forwarder
        /// <para />PropertyTerm: Party
        /// <para />AssociatedObjectClass: Party
        /// <para />RepresentationTerm: Party
        /// <para />AlternativeBusinessTerms: Consolidator (WCO ID 192 AND 193)
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public PartyType FreightForwarderParty
        {
            get
            {
                if (__FreightForwarderParty == null) { __FreightForwarderParty = new PartyType(); }
                return __FreightForwarderParty;
            }
            set
            {
                __FreightForwarderParty = value;
            }
        }

        /// <summary>
        /// An identifiable collection of one or more goods items to be transported between the seller party and the buyer party.
        /// <para />ComponentType: ASBIE
        /// <para />DictionaryEntryName: Forwarding Instructions. Shipment
        /// <para />Cardinality: 1
        /// <para />ObjectClass: Forwarding Instructions
        /// <para />PropertyTerm: Shipment
        /// <para />AssociatedObjectClass: Shipment
        /// <para />RepresentationTerm: Shipment
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public ShipmentType Shipment
        {
            get
            {
                if (__Shipment == null) { __Shipment = new ShipmentType(); }
                return __Shipment;
            }
            set
            {
                __Shipment = value;
            }
        }

        /// <summary>
        /// A reference to another document associated with this document.
        /// <para />ComponentType: ASBIE
        /// <para />DictionaryEntryName: Forwarding Instructions. Document Reference
        /// <para />Cardinality: 0..n
        /// <para />ObjectClass: Forwarding Instructions
        /// <para />PropertyTerm: Document Reference
        /// <para />AssociatedObjectClass: Document Reference
        /// <para />RepresentationTerm: Document Reference
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public System.Collections.Generic.List<DocumentReferenceType> DocumentReference
        {
            get
            {
                if (__DocumentReference == null) { __DocumentReference = new System.Collections.Generic.List<DocumentReferenceType>(); }
                return __DocumentReference;
            }
            set
            {
                __DocumentReference = value;
            }
        }

        /// <summary>
        /// Information about the rate of exchange (conversion) between two currencies.
        /// <para />ComponentType: ASBIE
        /// <para />DictionaryEntryName: Forwarding Instructions. Exchange Rate
        /// <para />Cardinality: 0..n
        /// <para />ObjectClass: Forwarding Instructions
        /// <para />PropertyTerm: Exchange Rate
        /// <para />AssociatedObjectClass: Exchange Rate
        /// <para />RepresentationTerm: Exchange Rate
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute]
        public System.Collections.Generic.List<ExchangeRateType> ExchangeRate
        {
            get
            {
                if (__ExchangeRate == null) { __ExchangeRate = new System.Collections.Generic.List<ExchangeRateType>(); }
                return __ExchangeRate;
            }
            set
            {
                __ExchangeRate = value;
            }
        }

    }
}
