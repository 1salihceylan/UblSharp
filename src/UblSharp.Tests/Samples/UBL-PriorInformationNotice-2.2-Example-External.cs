// Generated by UblSharp.Tests.Generator
using System;
using System.Collections.Generic;
using System.Xml;
using UblSharp;
using UblSharp.CommonAggregateComponents;
using UblSharp.CommonExtensionComponents;
using UblSharp.UnqualifiedDataTypes;
using UblSharp.XmlDigitalSignature;
using UblSharp.Tests.Util;

namespace UblSharp.Tests.Samples
{
    internal class UBLPriorInformationNotice22ExampleExternal
    {
        public static PriorInformationNoticeType Create()
        {
            var doc = new PriorInformationNoticeType
            {
                IssueDate = "2016-05-29",
                ContractingParty = new List<ContractingPartyType>()
                {
                    new ContractingPartyType
                    {
                        Party = new PartyType
                        {
                            PartyIdentification = new List<PartyIdentificationType>()
                            {
                                new PartyIdentificationType
                                {
                                    ID = "Other"
                                }
                            },
                        }
                    }
                },
                TenderingTerms = new TenderingTermsType
                {
                    TenderPreparation = new List<TenderPreparationType>()
                    {
                        new TenderPreparationType
                        {
                            TenderEnvelopeID = "abc",
                            TenderEncryptionData = new List<EncryptionDataType>()
                            {
                                new EncryptionDataType
                                {
                                    MessageFormat = "1.2.840.113549.1.9.16.0.1",
                                    EncryptionCertificateAttachment = new AttachmentType
                                    {
                                        ExternalReference = new ExternalReferenceType
                                        {
                                            URI = "www.digst.dk/udbud/NemID.cer "
                                        }
                                    },
                                    EncryptionCertificatePathChain = new List<EncryptionCertificatePathChainType>()
                                    {
                                        new EncryptionCertificatePathChainType
                                        {
                                            URI = "https://www.trust2408/certPaths/Trust2408_issuingCA12_chain.p7c"
                                        }
                                    },
                                    EncryptionSymmetricAlgorithm = new List<EncryptionSymmetricAlgorithmType>()
                                    {
                                        new EncryptionSymmetricAlgorithmType
                                        {
                                            OID = "2.16.840.1.101.3.4.1.2"
                                        },
                                        new EncryptionSymmetricAlgorithmType
                                        {
                                            OID = "2.16.840.1.101.3.4.1.42"
                                        }
                                    },
                                }
                            },
                        }
                    },
                }
            };
            doc.Xmlns = new System.Xml.Serialization.XmlSerializerNamespaces(new[]
            {
                new XmlQualifiedName("cbc","urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2"),
                new XmlQualifiedName("cac","urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2"),
            });
            doc.UBLVersionID = null;
            return doc;
        }
    }
}
