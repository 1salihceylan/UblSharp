// Generated by UblSharp.Tests.Generator
using System;
using System.Collections.Generic;
using System.Xml;
using UblSharp;
using UblSharp.CommonAggregateComponents;
using UblSharp.CommonExtensionComponents;
using UblSharp.UnqualifiedDataTypes;
using UblSharp.XmlDigitalSignature;
using UblSharp.Tests.Util;

namespace UblSharp.Tests.Samples
{
    internal class UBLExpressionOfInterestRequest22Example
    {
        public static ExpressionOfInterestRequestType Create()
        {
            var doc = new ExpressionOfInterestRequestType
            {
                UBLVersionID = "2.2",
                CustomizationID = "urn:www.cenbii.eu:transaction:BiiTrns081:ver2.0",
                ProfileID = "urn:www.cenbii.eu:profile:bii46:ver2.0",
                ID = "234486-2017",
                UUID = "x2344vghjjrhhfhrrrgd4567",
                ContractFolderID = "2017/S 214-3792289",
                IssueDate = "2017-10-16",
                IssueTime = "17:30:00+01:00",
                Note = new List<TextType>()
                {
                    new TextType
                    {
                        Value = "We are very interested please send us all information possible"
                    }
                },
                EconomicOperatorParty = new EconomicOperatorPartyType
                {
                    Party = new PartyType
                    {
                        WebsiteURI = "http://super.company.dk",
                        EndpointID = new IdentifierType
                        {
                            schemeAgencyID = "9",
                            schemeID = "FI:OVT",
                            Value = "01842222222222"
                        },
                        PartyIdentification = new List<PartyIdentificationType>()
                        {
                            new PartyIdentificationType
                            {
                                ID = new IdentifierType
                                {
                                    schemeAgencyID = "9",
                                    schemeID = "GLN",
                                    Value = "5790000127777"
                                }
                            }
                        },
                        PartyName = new List<PartyNameType>()
                        {
                            new PartyNameType
                            {
                                Name = "SuperCompany"
                            }
                        },
                        PostalAddress = new AddressType
                        {
                            AddressFormatCode = new CodeType
                            {
                                listAgencyID = "700",
                                listID = "CENBII3",
                                Value = "Structured"
                            },
                            StreetName = "Korsbygade 34",
                            CityName = "Aalborg",
                            PostalZone = "9000",
                            CountrySubentity = new TextType
                            {
                            },
                            Country = new CountryType
                            {
                                IdentificationCode = "DK"
                            }
                        },
                        PartyLegalEntity = new List<PartyLegalEntityType>()
                        {
                            new PartyLegalEntityType
                            {
                                RegistrationName = "SuperCompany",
                                CompanyID = new IdentifierType
                                {
                                    schemeID = "DK:CVR",
                                    Value = "DK59873677"
                                }
                            }
                        },
                        Contact = new ContactType
                        {
                            ID = "7778",
                            Name = "Ole Hansen",
                            Telephone = "4526532147",
                            Telefax = "4526532146",
                            ElectronicMail = "Ole@super.company.dk"
                        }
                    }
                },
                ContractingParty = new List<ContractingPartyType>()
                {
                    new ContractingPartyType
                    {
                        Party = new PartyType
                        {
                            EndpointID = new IdentifierType
                            {
                                schemeID = "FI:OVT",
                                Value = "01841111111111"
                            },
                            PartyIdentification = new List<PartyIdentificationType>()
                            {
                                new PartyIdentificationType
                                {
                                    ID = new IdentifierType
                                    {
                                        schemeAgencyID = "9",
                                        schemeID = "GLN",
                                        Value = "5398000392577"
                                    }
                                }
                            },
                            PartyName = new List<PartyNameType>()
                            {
                                new PartyNameType
                                {
                                    Name = "FirstAgency"
                                }
                            },
                            Contact = new ContactType
                            {
                                Name = "Ole Ellerb√¶k Madsen"
                            }
                        }
                    }
                },
                ProcurementProject = new ProcurementProjectType
                {
                    ID = "DP",
                    Name = new List<NameType>()
                    {
                        new NameType
                        {
                            Value = "DigitalPost"
                        }
                    },
                    Description = new List<TextType>()
                    {
                        new TextType
                        {
                            Value = "Only Lot2"
                        }
                    },
                },
                ProcurementProjectLotReference = new List<ProcurementProjectLotReferenceType>()
                {
                    new ProcurementProjectLotReferenceType
                    {
                        ID = "Lot2"
                    }
                },
            };
            doc.Xmlns = new System.Xml.Serialization.XmlSerializerNamespaces(new[]
            {
                new XmlQualifiedName("cbc","urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2"),
                new XmlQualifiedName("cac","urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2"),
            });
            return doc;
        }
    }
}
