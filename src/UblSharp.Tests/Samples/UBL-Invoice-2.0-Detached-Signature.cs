// Generated by UblSharp.Tests.Generator
using System;
using System.Collections.Generic;
using System.Xml;
using UblSharp;
using UblSharp.CommonAggregateComponents;
using UblSharp.CommonExtensionComponents;
using UblSharp.UnqualifiedDataTypes;
using UblSharp.XmlDigitalSignature;

namespace UblSharp.Tests.Samples
{
    internal class UBLInvoice20DetachedSignature
    {
        public static XmlSignatureType Create()
        {
            var doc = new XmlSignatureType
            {
                SignedInfo = new SignedInfoType
                {
                    Reference = new List<ReferenceType>()
                    {
                        new ReferenceType
                        {
                            DigestValue = Convert.FromBase64String("qM/+Gsg4/E/0p3fE9LTZA6Xtkds="),
                        },
                        new ReferenceType
                        {
                            DigestValue = Convert.FromBase64String("mjiR61tL2dV3HMus3GBG/aEjbt4=")
                        }
                    },
                },
                SignatureValue = new SignatureValueType
                {
                    Id = "addedSigVal",
                    Value = Convert.FromBase64String(@"VkiVEIkPTISrrwdFouXWEHirxST2mCbLuXmgO0T+4UXHq9Sir+/9gnEZU7Aa2PCB
Q/3X0RIkX/sQwGMNdQ5jUJWc0BoGOszhc0CYHxDiayqlQ4fZGz+nhVdoUog4o7Tx
dk+vu/LS/7iz6asudXp2Zh8tT4LnOINsj+//DdRd6yM=")
                },
                KeyInfo = new KeyInfoType
                {
                },
                Object = new List<ObjectType>()
                {
                    new ObjectType
                    {
                    }
                },
            };
            return doc;
        }
    }
}
